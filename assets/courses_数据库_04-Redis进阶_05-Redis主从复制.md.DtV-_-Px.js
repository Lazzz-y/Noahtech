import{_ as h}from"./chunks/ArticleMetadata.Ba4icgGF.js";import{_ as p,m as r,a as d,u as k,B as o,e,x as c,ah as g,o as l,p as u,q as F}from"./chunks/framework.Bi-mNMmX.js";import"./chunks/theme.--nR5Zd2.js";const R=JSON.parse('{"title":"Redis主从复制","description":"","frontmatter":{"title":"Redis主从复制","author":"Noah","date":"2024/07/08 13:50","categories":["Redis进阶"],"tags":["Redis","Redis进阶"]},"headers":[],"relativePath":"courses/数据库/04-Redis进阶/05-Redis主从复制.md","filePath":"courses/数据库/04-Redis进阶/05-Redis主从复制.md","lastUpdated":1720612269000}'),v={name:"courses/数据库/04-Redis进阶/05-Redis主从复制.md"},b=e("h1",{id:"redis主从复制",tabindex:"-1"},[c("Redis主从复制 "),e("a",{class:"header-anchor",href:"#redis主从复制","aria-label":'Permalink to "Redis主从复制"'},"​")],-1),m=g(`<nav class="table-of-contents"><ul><li><a href="#主从复制的工作原理">主从复制的工作原理</a><ul><li><a href="#基本概念">基本概念</a></li><li><a href="#复制过程">复制过程</a></li></ul></li><li><a href="#配置主从复制">配置主从复制</a><ul><li><a href="#配置主服务器">配置主服务器</a></li><li><a href="#配置从服务器">配置从服务器</a></li><li><a href="#动态配置从服务器">动态配置从服务器</a></li></ul></li><li><a href="#角色切换">角色切换</a><ul><li><a href="#促使-slave-成为-master">促使 Slave 成为 Master</a></li><li><a href="#手动故障转移">手动故障转移</a></li></ul></li><li><a href="#复制拓扑结构">复制拓扑结构</a></li><li><a href="#优缺点">优缺点</a><ul><li><a href="#优点">优点</a></li><li><a href="#缺点">缺点</a></li></ul></li></ul></nav><div class="tip custom-block"><p class="custom-block-title">什么是发布订阅？😦</p><p>Redis 主从复制(Replication) 是一种将数据从一个 Redis 实例(主服务器，Master) 复制到一个或多个 Redis 实例(从服务器，Slave) 的机制。这种机制很重要，它可以用于提高数据的可用性、扩展读取性能和实现数据备份。Master以写为主，Slave以读为主。</p></div><h2 id="主从复制的工作原理" tabindex="-1">主从复制的工作原理 <a class="header-anchor" href="#主从复制的工作原理" aria-label="Permalink to &quot;主从复制的工作原理&quot;">​</a></h2><h3 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h3><ul><li><strong>主服务器(Master):</strong> 主要负责写操作，数据的源头。所有的数据变更都首先应用到 Master 上。</li><li><strong>从服务器(Slave):</strong> 复制 Master 的数据，主要负责读取操作。Slave 不会处理(默认情况下)，所有写操作指向 Master。Slave 可以从其他 Slave 中进行复制，从而形成树形结构的复制拓扑</li></ul><h3 id="复制过程" tabindex="-1">复制过程 <a class="header-anchor" href="#复制过程" aria-label="Permalink to &quot;复制过程&quot;">​</a></h3><ol><li><strong>初始化之后:</strong> 当 Slave 第一次启动并连接到 Master 时，会触发全量同步。</li><li><strong>全量同步:</strong><ul><li>Slave 向 Master 发送 <code>PSYNC</code> 命令。</li><li>Master 生成 RDB 快照，并在生成的同时，将所有新写入的操作缓存在内存中。</li><li>快照生成完毕后，Master 将快照发送给 Slave，Slave 收到快照后将其载入内存。</li><li>同时，Master 将缓存在内存中的写操作发送给 Slave，Slave执行这些写操作，以便与 Master 的状态保持一致。</li></ul></li><li><strong>增量同步:</strong><ul><li>Slave 和 Master 同步后，将继续保持连接并接收 Master 的新写操作。</li><li>Master 的每个写操作都会发送给所有连接的Slave，Slave接收并执行这些操作，保持与Master的数据一致。</li></ul></li></ol><h2 id="配置主从复制" tabindex="-1">配置主从复制 <a class="header-anchor" href="#配置主从复制" aria-label="Permalink to &quot;配置主从复制&quot;">​</a></h2><h3 id="配置主服务器" tabindex="-1">配置主服务器 <a class="header-anchor" href="#配置主服务器" aria-label="Permalink to &quot;配置主服务器&quot;">​</a></h3><p>主服务器通常不需要额外配置，只需要确保Redis正常运行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 用配置文件方式启动Redis,选择要启动的Redis配置文件即可。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/redis/redis.conf</span></span></code></pre></div><h3 id="配置从服务器" tabindex="-1">配置从服务器 <a class="header-anchor" href="#配置从服务器" aria-label="Permalink to &quot;配置从服务器&quot;">​</a></h3><p>在从服务器的配置文件中，设置以下选项:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 配置从服务器连接到主服务器的IP和端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">replicaof</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">masteri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">masterpor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 如果主服务器设置了密码，从服务器需要提供该密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">masterauth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master-passwor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><p>示例</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">replicaof</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 127.0.0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 6379</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">masterauth</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 123456</span></span></code></pre></div><p>保存配置文件并启动从服务器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /path/to/slave/redis.conf</span></span></code></pre></div><h3 id="动态配置从服务器" tabindex="-1">动态配置从服务器 <a class="header-anchor" href="#动态配置从服务器" aria-label="Permalink to &quot;动态配置从服务器&quot;">​</a></h3><p>除了在配置文件中设定外，还可以通过 Redis 命令动态设置从服务器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 连接从服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">slave-por</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置主服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> replicaof</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">masteri</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">masterpor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置主服务器的密码（如果有）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CONFIG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> SET</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> masterauth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">master-passwor</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><h2 id="角色切换" tabindex="-1">角色切换 <a class="header-anchor" href="#角色切换" aria-label="Permalink to &quot;角色切换&quot;">​</a></h2><p>Redis 支持两种切换角色的方式。</p><h3 id="促使-slave-成为-master" tabindex="-1">促使 Slave 成为 Master <a class="header-anchor" href="#促使-slave-成为-master" aria-label="Permalink to &quot;促使 Slave 成为 Master&quot;">​</a></h3><p>打开 Slave 配置文件，删除或注释掉 <code>replicaof</code> 配置项，然后重启 Slave 。</p><h3 id="手动故障转移" tabindex="-1">手动故障转移 <a class="header-anchor" href="#手动故障转移" aria-label="Permalink to &quot;手动故障转移&quot;">​</a></h3><p>Redis 提供了 <code>Slaveof</code> 命令，可以手动触发故障转移</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">slave-por</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">SLAVEOF</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> NO</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ONE</span></span></code></pre></div><h2 id="复制拓扑结构" tabindex="-1">复制拓扑结构 <a class="header-anchor" href="#复制拓扑结构" aria-label="Permalink to &quot;复制拓扑结构&quot;">​</a></h2><p>Redis 允许创建多层级树形结构的复制拓扑。一个主服务器可以有多个从服务器，而每个从服务器可以有自己的从服务器：</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span>Master</span></span>
<span class="line"><span>  ├── Slave1</span></span>
<span class="line"><span>  │     ├── Slave1.1</span></span>
<span class="line"><span>  │     └── Slave1.2</span></span>
<span class="line"><span>  └── Slave2</span></span>
<span class="line"><span>        └── Slave2.1</span></span></code></pre></div><h2 id="优缺点" tabindex="-1">优缺点 <a class="header-anchor" href="#优缺点" aria-label="Permalink to &quot;优缺点&quot;">​</a></h2><h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h3><ol><li><strong>高可用性:</strong> 通过增加 Slave ，提高系统的可用性和容灾能力。</li><li><strong>读扩展性:</strong> Slave 可以分担读取压力，从而扩展系统的读取性能。</li><li><strong>备份:</strong> Slave 提供了数据的实时副本，适合做数据备份。</li></ol><h3 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h3><ol><li><strong>一致性:</strong> 主从复制是异步的，Slave 可能会有延迟，导致数据暂时不一致。</li><li><strong>写不可扩展性:</strong> 写操作只能应用到Master，无法通过增加 Slave 来扩展写性能。</li><li><strong>故障切换和恢复:</strong> 当 Master 宕机时，需要手动或使用工具进行故障切换。</li></ol>`,36);function y(s,D,C,f,A,S){const t=h,n=r("ClientOnly");return l(),d("div",null,[b,k(n,null,{default:o(()=>{var a,i;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((i=s.$frontmatter)==null?void 0:i.showArticleMetadata)??!0)?(l(),u(t,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),m])}const M=p(v,[["render",y]]);export{R as __pageData,M as default};
