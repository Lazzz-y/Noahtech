import{_ as l}from"./chunks/ArticleMetadata.BqQPtrzx.js";import{_ as p,m as e,a as C,u as r,B as d,e as h,x as g,ah as y,o as n,p as F,q as A}from"./chunks/framework.Bi-mNMmX.js";import"./chunks/theme.NLG9-6OP.js";const j=JSON.parse('{"title":"数组拓展","description":"","frontmatter":{"title":"数组拓展","author":"Noah","date":"2024/06/24 19:10","categories":["Java基础入门"],"tags":["Java","基础","JDK","数组"]},"headers":[],"relativePath":"courses/java/basic/01-Java基础入门/04-数组(拓展).md","filePath":"courses/java/basic/01-Java基础入门/04-数组(拓展).md","lastUpdated":1719399271000}'),B={name:"courses/java/basic/01-Java基础入门/04-数组(拓展).md"},D=h("h1",{id:"数组拓展",tabindex:"-1"},[g("数组拓展 "),h("a",{class:"header-anchor",href:"#数组拓展","aria-label":'Permalink to "数组拓展"'},"​")],-1),c=y(`<nav class="table-of-contents"><ul><li><a href="#arrays类">Arrays类</a><ul><li><a href="#什么是arrays类">什么是Arrays类</a></li><li><a href="#常用功能">常用功能</a></li></ul></li><li><a href="#冒泡排序">冒泡排序</a><ul><li><a href="#特点">特点</a></li><li><a href="#核心">核心</a></li><li><a href="#实现">实现</a></li></ul></li><li><a href="#稀疏数组">稀疏数组</a><ul><li><a href="#介绍">介绍</a></li><li><a href="#图解">图解</a></li><li><a href="#代码实现">代码实现</a></li></ul></li></ul></nav><h2 id="arrays类" tabindex="-1">Arrays类 <a class="header-anchor" href="#arrays类" aria-label="Permalink to &quot;Arrays类&quot;">​</a></h2><h3 id="什么是arrays类" tabindex="-1">什么是Arrays类 <a class="header-anchor" href="#什么是arrays类" aria-label="Permalink to &quot;什么是Arrays类&quot;">​</a></h3><ul><li>数组的工具类<code>java.util.Arrays</code>。</li><li>由于数组对象本身并没有什么方法可以供我们调用，但API中提供了一个工具类Arrays供我们使用，从而可以对数据对象进行一些基本的操作。</li><li>Arrays类中的方法都是static修饰的静态方法，在使用的时候可以直接使用类名进行调用，而“不用”使用对象来调用(“不用” 不是 “不能”)</li></ul><h3 id="常用功能" tabindex="-1">常用功能 <a class="header-anchor" href="#常用功能" aria-label="Permalink to &quot;常用功能&quot;">​</a></h3><ul><li><strong>赋值:</strong> 通过 <code>fill</code> 方法。</li><li><strong>排序:</strong> 通过 <code>sort</code> 方法，按升序。</li><li><strong>比较:</strong> 通过 <code>equals</code> 方法比较数组中元素是否相等。</li><li><strong>查找:</strong> 通过 <code>binarySearch</code> 方法能对排序好的数组进行二分查找法操作。</li></ul><h2 id="冒泡排序" tabindex="-1">冒泡排序 <a class="header-anchor" href="#冒泡排序" aria-label="Permalink to &quot;冒泡排序&quot;">​</a></h2><h3 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h3><ul><li>冒泡排序是最为出门的排序算法之一，共有八大排序。</li><li>代码相当简单，两层循环，外层冒泡轮数，里层一次比较。</li></ul><h3 id="核心" tabindex="-1">核心 <a class="header-anchor" href="#核心" aria-label="Permalink to &quot;核心&quot;">​</a></h3><p><img src="https://raw.githubusercontent.com/Noah2Y/img/main/blog/20240624212615.gif" alt=""></p><ol><li>比较数组中两个相邻的元素，如果第一个数比第二个数大，就交换他们的位置。</li><li>每一次比较都会产生一个最大或者最小的数字。</li><li>下一轮则可以少一次排序。</li><li>依次循环，直到结束。</li></ol><h3 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[] array){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 临时变量，用于交换数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> temp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 外层循环，判断排序要走多少次</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> array.length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            // 内层循环，判断当前元素与下一个元素的大小，并且交换</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> array.length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i; j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(array[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> array[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> array[j];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    array[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> array[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    array[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> temp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> array;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span></code></pre></div><h2 id="稀疏数组" tabindex="-1">稀疏数组 <a class="header-anchor" href="#稀疏数组" aria-label="Permalink to &quot;稀疏数组&quot;">​</a></h2><h3 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h3><ul><li>当一个数组中大部分元素为0，或者为同一值的数组时，可以使用稀疏数组来保存该数值</li><li>稀疏数组的处理方式是： <ul><li>记录数组一共有几行几列，有多少个不同值。</li><li>把具有不同值的元素和行列及值记录在一个小规模的数组中，从而缩小程序的规模。</li></ul></li></ul><h3 id="图解" tabindex="-1">图解 <a class="header-anchor" href="#图解" aria-label="Permalink to &quot;图解&quot;">​</a></h3><p><img src="https://raw.githubusercontent.com/Noah2Y/img/main/blog/20240626185110.png" alt=""></p><h3 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h3><h4 id="_1-原始数值创建" tabindex="-1">1. 原始数值创建 <a class="header-anchor" href="#_1-原始数值创建" aria-label="Permalink to &quot;1. 原始数值创建&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 1.创建一个 9 * 9 的二维数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">[][] </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 2.给其中的任意元素赋值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        arr1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 15</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        arr1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 3.输出原始的二维数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anInt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ints) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(anInt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span></code></pre></div><details class="details custom-block"><summary>查看运行结果👀</summary><p>原始二维数组输出结果</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	15</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	20</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span></span></code></pre></div></details><h4 id="_2-传化为稀疏数组" tabindex="-1">2. 传化为稀疏数组 <a class="header-anchor" href="#_2-传化为稀疏数组" aria-label="Permalink to &quot;2. 传化为稀疏数组&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 2. 转化为稀疏数值保存</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 2.1 获取有效值的个数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1.length; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1[i].length; j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (arr1[i][j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    sum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;有效值的个数：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sum);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 2.2 创建一个二维数组用于保存转换后的二维数组 即稀疏数值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">[][] </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 2.3 给稀疏数组头部赋值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        arr2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1.length;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        arr2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">].length;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        arr2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sum;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 2.4 将原始数组的有效值赋值给稀疏数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1.length; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1[i].length; j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (arr1[i][j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                    // 横坐标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    arr2[count][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                    // 纵坐标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    arr2[count][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> j;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                    // 有效值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    arr2[count][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1[i][j];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 2.5 输出稀疏数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr2) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ints[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    ints[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                    ints[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span></code></pre></div><details class="details custom-block"><summary>查看运行结果👀</summary><p>稀疏数组输出结果</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">有效值的个数：</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">9</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	9</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	4</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	15</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">7</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	2</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	20</span></span></code></pre></div></details><h4 id="_3-还原稀疏数值" tabindex="-1">3. 还原稀疏数值 <a class="header-anchor" href="#_3-还原稀疏数值" aria-label="Permalink to &quot;3. 还原稀疏数值&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 3. 还原稀疏数组</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 3.1 读取稀疏数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">[][] </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">arr3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[arr2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]][arr2[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 3.2 还原稀疏数值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr2.length; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            arr3[arr2[i][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]][arr2[i][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr2[i][</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#F69D50;">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> arr1) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> anInt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ints) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(anInt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span></code></pre></div><details class="details custom-block"><summary>查看运行结果👀</summary><p>原始数组输出结果</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	15</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	20</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	0</span></span></code></pre></div></details>`,29);function o(s,E,u,m,b,v){const k=l,t=e("ClientOnly");return n(),C("div",null,[D,r(t,null,{default:d(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),F(k,{key:0,article:s.$frontmatter},null,8,["article"])):A("",!0)]}),_:1}),c])}const x=p(B,[["render",o]]);export{j as __pageData,x as default};
